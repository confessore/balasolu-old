// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using balasolu.contexts;

#nullable disable

namespace balasolu.Migrations.CryptoDb
{
    [DbContext(typeof(CryptoDbContext))]
    partial class CryptoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("balasolu.models.abstractions.Observation", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BaseAsset")
                        .HasColumnType("longtext");

                    b.Property<int>("ObservationType")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ObservedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SampleId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TradingAsset")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SampleId");

                    b.ToTable("Observations", (string)null);

                    b.HasDiscriminator<int>("ObservationType").IsComplete(true);
                });

            modelBuilder.Entity("balasolu.models.abstractions.Progression", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BaseAsset")
                        .HasColumnType("longtext");

                    b.Property<decimal>("HighPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LowPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MeanPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset?>("ProgressionEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("ProgressionStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProgressionType")
                        .HasColumnType("int");

                    b.Property<string>("TradeAsset")
                        .HasColumnType("longtext");

                    b.Property<string>("TrendId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("TrendId");

                    b.ToTable("Progressions", (string)null);

                    b.HasDiscriminator<int>("ProgressionType").IsComplete(true);
                });

            modelBuilder.Entity("balasolu.models.abstractions.Sample", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BaseAsset")
                        .HasColumnType("longtext");

                    b.Property<decimal>("HighPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LowPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MeanPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProgressionId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("SampleEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("SampleStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SampleType")
                        .HasColumnType("int");

                    b.Property<string>("TradeAsset")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProgressionId");

                    b.ToTable("Samples", (string)null);

                    b.HasDiscriminator<int>("SampleType").IsComplete(true);
                });

            modelBuilder.Entity("balasolu.models.abstractions.Trend", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BaseAsset")
                        .HasColumnType("longtext");

                    b.Property<decimal>("HighPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LowPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MeanPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TradeAsset")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("TrendEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("TrendStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TrendType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trends", (string)null);

                    b.HasDiscriminator<int>("TrendType").IsComplete(true);
                });

            modelBuilder.Entity("balasolu.models.observations.DefaultObservation", b =>
                {
                    b.HasBaseType("balasolu.models.abstractions.Observation");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("balasolu.models.progressions.DefaultProgression", b =>
                {
                    b.HasBaseType("balasolu.models.abstractions.Progression");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("balasolu.models.samples.DefaultSample", b =>
                {
                    b.HasBaseType("balasolu.models.abstractions.Sample");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("balasolu.models.trends.DefaultTrend", b =>
                {
                    b.HasBaseType("balasolu.models.abstractions.Trend");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("balasolu.models.abstractions.Observation", b =>
                {
                    b.HasOne("balasolu.models.abstractions.Sample", null)
                        .WithMany("Observations")
                        .HasForeignKey("SampleId");
                });

            modelBuilder.Entity("balasolu.models.abstractions.Progression", b =>
                {
                    b.HasOne("balasolu.models.abstractions.Trend", null)
                        .WithMany("Progressions")
                        .HasForeignKey("TrendId");
                });

            modelBuilder.Entity("balasolu.models.abstractions.Sample", b =>
                {
                    b.HasOne("balasolu.models.abstractions.Progression", null)
                        .WithMany("Samples")
                        .HasForeignKey("ProgressionId");
                });

            modelBuilder.Entity("balasolu.models.abstractions.Progression", b =>
                {
                    b.Navigation("Samples");
                });

            modelBuilder.Entity("balasolu.models.abstractions.Sample", b =>
                {
                    b.Navigation("Observations");
                });

            modelBuilder.Entity("balasolu.models.abstractions.Trend", b =>
                {
                    b.Navigation("Progressions");
                });
#pragma warning restore 612, 618
        }
    }
}
